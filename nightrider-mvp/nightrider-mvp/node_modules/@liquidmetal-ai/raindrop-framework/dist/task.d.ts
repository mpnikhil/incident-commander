import { ExecutionContext } from './shared.js';
/**
 * Represents a scheduled event, typically from a Cron Trigger
 */
export interface Event {
    /** The value of the Cron Trigger that started the ScheduledEvent */
    cron: string;
    /** The type of event. This will always return "scheduled" */
    type: 'scheduled';
    /**
     * The time the ScheduledEvent was scheduled to be executed in milliseconds since January 1, 1970, UTC.
     * It can be parsed as new Date(event.scheduledTime).
     */
    scheduledTime: number;
}
/**
 * Abstract base class for processing scheduled events, for exampled, triggered crons
 * @template Env - The environment type containing runtime specific bindings
 */
export declare abstract class Task<Env> {
    ctx: ExecutionContext;
    env: Env;
    constructor(ctx: ExecutionContext, env: Env);
    abstract handle(event: Event): Promise<void>;
}
//# sourceMappingURL=task.d.ts.map