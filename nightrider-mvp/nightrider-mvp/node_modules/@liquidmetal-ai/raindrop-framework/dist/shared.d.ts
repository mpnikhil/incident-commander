export type ExecutionContext = {
    waitUntil(promise: Promise<any>): void;
};
export type Stub<T> = {
    [P in keyof T as T[P] extends (...args: any[]) => any ? P : never]: T[P] extends (...args: infer A) => infer R ? (...args: A) => Promise<Awaited<R>> : never;
};
//# sourceMappingURL=shared.d.ts.map