import type { ColumnType } from 'kysely';
export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U> ? ColumnType<S, I | undefined, U> : ColumnType<T, T | undefined, T>;
export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type Example = {
  exampleId: string;
  createdAtNowLocaltime: Generated<string>;
  updatedAtNowLocaltime: Generated<string>;

  createdAtNowUTC: Generated<string>;
  updatedAtNowUTC: Generated<string>;

  createdAtCurrentTimestamp: Generated<string>;
  updatedAtCurrentTimestamp: Generated<string>;

  createdAtStrftime: Generated<string>;
  updatedAtStrftime: Generated<string>;
};

export type DB = {
  Example: Example;
};
